#!/usr/bin/python3
#import time
#start = time.time()
import sys

c = 1


def gcd(x, y):
    if y == 0:
        return x
    return gcd(y, x % y)


def g(x, c):
    return (x * x + c)


def getf(n):
    global c
    if (n == 1):
        return n
    if n % 2 == 0:
        return 2
    if n % 3 == 0:
        return 3
    if n % 5 == 0:
        return 5
    x = y = 2
    c += 1
    d = 1

    while d == 1:
        x = g(x, c) % n
        y = g(g(y, c), c) % n
        y = g(g(y, c), c) % n
        d = gcd(abs(x - y), n)

    if d == n:
        return getf(n)
    else:
        return d


def getFactor(n):
    global c
    c = 1
    try:
        p = getf(n)
        return [p, (n // p)]
    except:
        return [n, 1]

#print(getFactor(1718944270642558716715))
#import sys
#sys.exit(0)
f = open(sys.argv[1], "r")

for l in f:
    n = int(l)
    fa = getFactor(n)
    print(f"{n}={fa[1]}*{fa[0]}")
f.close()
#end = time.time()
#print(f"time ={end - start}")
