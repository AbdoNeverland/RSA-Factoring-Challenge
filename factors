#!/usr/bin/python3
import sys
from random import randrange
import random
c = 0
number = 2

def gcd(x, y):
    if y == 0:
        return x
    return gcd(y, x % y)


def g(x):
    global c, number
    return (x * x + c)%number

def getRandom(start, end):
    return randrange(start, end +1)
def getf():
    global c,number
    c += 1
    if (number == 1):
        return number
    for k in range(2,30):
        if number % k == 0:
            return k
    x = y = 2
    # print(f"c = {c}")
    d = 1

    while d == 1:
        x = g(x)
        y = g(g(y))
        d = gcd(abs(x - y), number)


    if d == number:
        return getf()
    else:
        return d


def is_prime_smaller(n):
    for i in range(2, n):
        if n % i == 0:
            return False
    return True


def is_prime(n, prec=3):
    if n < 100:
        return is_prime_smaller(n)
    else:
        for i in range(prec):
            a = randrange(2, n - 2 + 1)
            if pow(a, n - 1, n) != 1:
                return False
    return True

if len(sys.argv) != 2:
    sys.exit(1)
try:
    f = open(sys.argv[1], "r")
except:
    sys.exit(1)
for line in f:
    number = int(line)
    p = 1
    c = 0
    if is_prime(number):
        p = 1
    else:
        p = getf()
    q = number // p
    if p > q:
        p,q=q,p
    print(f"{number}={q}*{(p)}")
f.close()